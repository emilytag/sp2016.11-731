#!/usr/bin/env python
import optparse
import sys
from collections import defaultdict

optparser = optparse.OptionParser()
optparser.add_option("-b", "--bitext", dest="bitext", default="data/dev-test-train.de-en", help="Parallel corpus (default data/dev-test-train.de-en)")
optparser.add_option("-n", "--num_sentences", dest="num_sents", default=sys.maxint, type="int", help="Number of sentences to use for training and alignment")
(opts, _) = optparser.parse_args()

sys.stderr.write("Training with IBM Model 1...\n")
bitext = [[sentence.strip().lower().split() for sentence in pair.split(' ||| ')] for pair in open(opts.bitext)][:opts.num_sents]

f_count = {}
e_count = {}
probs = {}
iteration = 0

eVocab = []
for (n, (f, e)) in enumerate(bitext):
  for word in set(e):
    eVocab.append(word)
initialProb = float(1.0)/float(len(set(eVocab)))
#print "initialProb =", initialProb

while iteration < 5:
  #print iteration, "iterations..."
  iteration += 1
  count = {}
  total = {}
  norm = {}
  for (n, (f, e)) in enumerate(bitext):

    for eng in e:
      norm[eng] = 0
      for forg in f:
        if iteration == 1:
          try:
            probs[eng][forg] = initialProb
          except:
            probs[eng] = {forg:initialProb}
        norm[eng] += probs[eng][forg]

    for eng in e:
      try:
        count[eng]
      except KeyError:
        count[eng] = {}
      for forg in f: 
          try:
            count[eng][forg] += probs[eng][forg]/norm[eng]
          except:
            count[eng][forg] = probs[eng][forg]/norm[eng]
          try:
            total[forg] += probs[eng][forg]/norm[eng]
          except:
            total[forg] = probs[eng][forg]/norm[eng]

  for (n, (f, e)) in enumerate(bitext):
    for forg in f:
      for eng in e:
        probs[eng][forg] = count[eng][forg]/total[forg]
output = open("model1.1.out", "w")
for (n, (f, e)) in enumerate(bitext):
  for i in range(len(e)):
    eng = e[i]
    possibilities = [0] * len(f)
    for j in range(len(f)):
      forg = f[j]
      possibilities[j] = probs[eng][forg]
    output.write(str(possibilities.index(max(possibilities)))+"-"+str(i)+" ")
    #print eng+"-"+f[possibilities.index(max(possibilities))]
  output.write("\n")

